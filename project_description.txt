This file contains documentation for archived code and data for 'Observed Changes in Daily Precipitation Intensity
in the United States' by Ryan D. Harp and Daniel E. Horton (resubmitted to Geophysical Research Letters on
June 7th, 2022). The following guide will detail the origin (whether downloaded or created) and purpose of files
necessary to successfully recreate our analysis.

Python modules necessary:
- cartopy
- datetime
- geopandas
- matplotlib
- numpy
- pandas
- scipy
- shapely
- time
- multiprocessing
- fnmatch
- os

Files downloaded and their initial location:
- NEON domain shapefiles: https://www.neonscience.org/data-samples/data/spatial-data-maps (under Quick Downloads >
    Domain Polygons)
- GHCN station data and metadata: https://www.ncei.noaa.gov/products/land-based-station/global-historical-climatology-network-daily
- NCA region shapefiles: personal communication with NCA authors

Scripts and their inputs/outputs:
- ghcn_summarizer.py: this script loops through all stations listed in the ghcnd-stations.txt summary file and
    compiles summary statistics and metadata on each station.
    - input:
        ghcnd_stations.txt (downloaded from GHCN portal)
        ghcnd-stations_file_compare.csv (manually created by comparing available file list with list of stations in
            metadata)
        all available GHCN-D station csv files (downloaded from GHCN portal)
    - output:
        ghcn_summary.csv: list of all available stations and relevant metadata and summary statistics
- station_NEON_assignment.py: this script loops through all stations in the summary/metadata file and determines which
    NEON domain each station falls within.
    - input:
        ghcn_summary.csv (created by ghcn_summarizer.py)
        NEON_Domains.shp (NEON domain shapefiles downloaded from neonscience.org)
    - output:
        US_stations_with_NEON.csv: list of all available stations within the US and relevant metadata/summary
            statistics, including NEON domain
- station_NCA_assignment.py: this script loops through all stations in the summary/metadata file and determines which
    NEON domain each station falls within.
    - input:
        ghcn_summary.csv (created by ghcn_summarizer.py)
        cb_2020_us_state_500k_ncaregions.shp (NCA region shapefiles from personal communication with NCA authors)
    - output:
        US_stations_with_NCA.csv: list of all available stations within the US and relevant metadata/summary
            statistics, including NCA region
- daily_precip_stats_NEON.py: this script determines if station observations meet qualification criteria and
    split qualifying data into two-year blocks for block bootstrapping
    - input:
        US_stations_with_NEON.csv (created by station_NEON_assignment.py)
        all available GHCN-D station csv files (downloaded from GHCN portal)
    - output:
        *<station>_<years>.npy: aggregation of all daily observations within a two-year segment for qualifying stations
        NEON_domain_daily_precip_stats.csv: list of all qualifying stations and summary statistics on number of daily
            observations for early/late periods and the domain the station falls within
- daily_precip_stats_NCA.py: this script determines if station observations meet qualification criteria and
    split qualifying data into two-year blocks for block bootstrapping
    - input:
        US_stations_with_NCA.csv (created by station_NCA_assignment.py)
        all available GHCN-D station csv files (downloaded from GHCN portal)
    - output:
        <station>_<years>.npy: aggregation of all daily observations within a two-year segment for qualifying stations
        NCA_region_daily_precip_stats.csv: list of all qualifying stations and summary statistics on number of daily
            observations for early/late periods and the region the station falls within
- daily_precip_block_bootstrap_calculations_NEON.py: this script calculates statistical moments and their change for each
    time period and NEON domain combination. Also calculates normalized change in frequency across percentiles
    - input:
        <station>_<years>.npy (created by daily_precip_stats_NEON.py)
    - output:
        domain_bootstrapped_daily_precipitation_pdf_moments_domain_<domain>.csv: domain-specific statistical moments
            for the early distribution and change in statistical moments between early and late distributions. Domain
            files are manually combined upon compilation. Only includes data for qualifying two-year station segments.
        pdf_shift_percentiles_domain_<domain>.npy: domain-specific normalized change in frequency across percentiles
            for full range
        pdf_shift_percentiles_99_domain_<domain>.npy: domain-specific normalized change in frequency across percentiles
            for 99-100th percentile
- daily_precip_block_bootstrap_calculations_NCA.py: this script calculates statistical moments and their change for each
    time period and NCA region combination. Also calculates normalized change in frequency across percentiles
    - input:
        <station>_<years>.npy (created by daily_precip_stats_NEON.py)
    - output:
        bootstrapped_daily_precipitation_pdf_moments_region_<region>.csv: region-specific statistical moments
            for the early distribution and change in statistical moments between early and late distributions. Region
            files are manually combined upon compilation. Only includes data for qualifying two-year station segments.
        pdf_shift_percentiles_region_<region>.npy: region-specific normalized change in frequency across percentiles
            for full range
        pdf_shift_percentiles_99_region_<region>.npy: region-specific normalized change in frequency across percentiles
            for 99-100th percentile
- precipitation_intensity_plots_with_block_bootstrapping.py: this script produces all figures for article
    - input:
        NEON_Domains.shp (NEON domain shapefiles downloaded from neonscience.org)
        cb_2020_us_state_500k_ncaregions.shp (NCA region shapefiles from personal communication with NCA authors)
        domain_bootstrapped_daily_precipitation_pdf_moments_merged.csv
            (created manually from results of daily_precip_block_bootstrap_calculations_NEON.py)
        pdf_shift_percentiles_domain_<domain>.npy (created by daily_precip_block_bootstrap_calculations_NEON.py)
        pdf_shift_percentiles_99_domain_<domain>.npy (created by daily_precip_block_bootstrap_calculations_NEON.py)
        <station>_<years>.npy (created by daily_precip_stats_NEON.py)
        NEON_domain_daily_precip_stats.csv (created by daily_precip_stats_NEON.py)
        NCA_region_daily_precip_stats.csv (created by daily_precip_stats_NCA.py)
        bootstrapped_daily_precipitation_pdf_moments_merged.csv
            (created manually from results of daily_precip_block_bootstrap_calculations_NCA.py)
        pdf_shift_percentiles_region_<region>.npy (created by daily_precip_block_bootstrap_calculations_NCA.py)
        pdf_shift_percentiles_99_region_<region>.npy (created by daily_precip_block_bootstrap_calculations_NCA.py)
    - output:
        Figures 1-3, S1-10
